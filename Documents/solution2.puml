@startuml

package UI{
    component "Room-view"
    component "Microbit-view"
    component "History"
    package "Logged in view" {
        component "Room-config"
        component "Micro:bit config"
        component "User management"
    }
}

package Backend {
    package "Webapp" {
        component "Flask-app" as flask
        component "Static resources" as SR
        component "Routes"
        component "Blueprints"
        component "Templates"
        component "Database handler" as WADB
    }

    package Websocket {
        component Server
        component "Database handler" as WSDB
    }

    package "Microbit-Module" as MM {
        component "MicroBit-class" as MBC
        component "Error-handler" as EH
        component "Database handler" as MMDB
    }
    database "sqlite3" {
        component User
        component Room
        component "Micro:bit"
        component History as dbhistory
    }
}
interface "Micro:bit" as MB

MB --> MBC
MMDB --> sqlite3
WADB <-> sqlite3
WSDB <-- sqlite3
UI <-- flask : renders
UI --> flask : POST 
Server --> UI
EH <- MBC
EH --> MMDB
WSDB -> Server
SR --> Templates
Routes <-- Templates
Blueprints <-- Routes
Templates <-- WADB
Routes <--> WADB
flask <- Blueprints

Room <-- [Micro:bit]
dbhistory <- [Micro:bit]

@enduml